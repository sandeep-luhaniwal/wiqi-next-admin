{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/kodu/nextjs/app/%28protected%29/home/GetUserTabel.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport {\r\n    getCoreRowModel,\r\n    getFilteredRowModel,\r\n    getPaginationRowModel,\r\n    getSortedRowModel,\r\n    useReactTable,\r\n} from '@tanstack/react-table';\r\nimport { Eye, Search, X } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n    Card,\r\n    CardFooter,\r\n    CardHeader,\r\n    CardTable,\r\n    CardTitle,\r\n    CardToolbar,\r\n} from '@/components/ui/card';\r\nimport { DataGrid } from '@/components/ui/data-grid';\r\nimport { DataGridColumnHeader } from '@/components/ui/data-grid-column-header';\r\nimport { DataGridPagination } from '@/components/ui/data-grid-pagination';\r\nimport { DataGridTable } from '@/components/ui/data-grid-table';\r\nimport { Input } from '@/components/ui/input';\r\nimport { ScrollArea, ScrollBar } from '@/components/ui/scroll-area';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\nconst GetUserTable = () => {\r\n    const router = useRouter();\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [pagination, setPagination] = useState({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n    });\r\n    const [sorting, setSorting] = useState([{ id: 'firstName', desc: false }]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    // ✅ Fetch users\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (!token) return;\r\n\r\n                const res = await fetch(\r\n                    `${process.env.NEXT_PUBLIC_API_URL}api/admin/getUser?limit=10000`,\r\n                    {\r\n                        headers: { Authorization: `Bearer ${token}` },\r\n                    }\r\n                );\r\n\r\n                const data = await res.json();\r\n\r\n                if (data.success) {\r\n                    const cleanUsers = data.data.users.map((u) => ({\r\n                        id: u._id,\r\n                        firstName: u.firstName,\r\n                        lastName: u.lastName,\r\n                        userName: u.userName,\r\n                        email: u.email,\r\n                        phone: u.phone,\r\n                        image: u.image,\r\n                        block: u.block ?? false,\r\n                    }));\r\n                    setUsers(cleanUsers);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    // ✅ Search filter\r\n    const filteredData = useMemo(() => {\r\n        if (!searchQuery) return users;\r\n        return users.filter(\r\n            (u) =>\r\n                u.firstName?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                u.lastName?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                u.userName?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                (u.phone ? String(u.phone).includes(searchQuery) : false)\r\n        );\r\n    }, [searchQuery, users]);\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                id: 'firstName',\r\n                accessorFn: (row) => row.firstName,\r\n                header: () => <span className=\"font-bold\">First Name</span>,\r\n                cell: ({ row }) => row.original.firstName,\r\n                enableSorting: false,\r\n                size: 150,\r\n            },\r\n            {\r\n                id: 'lastName',\r\n                accessorFn: (row) => row.lastName,\r\n                header: () => <span className=\"font-bold\">Last Name</span>,\r\n                cell: ({ row }) => row.original.lastName,\r\n                enableSorting: false,\r\n                size: 150,\r\n            },\r\n            {\r\n                id: 'userName',\r\n                accessorFn: (row) => row.userName,\r\n                header: () => <span className=\"font-bold\">Username</span>,\r\n                cell: ({ row }) => row.original.userName,\r\n                enableSorting: false,\r\n                size: 150,\r\n            },\r\n            {\r\n                id: 'email',\r\n                accessorFn: (row) => row.email,\r\n                header: () => <span className=\"font-bold\">Email</span>,\r\n                cell: ({ row }) => row.original.email,\r\n                enableSorting: false,\r\n                size: 250,\r\n            },\r\n            {\r\n                id: 'phone',\r\n                accessorFn: (row) => row.phone,\r\n                header: () => <span className=\"font-bold\">Phone</span>,\r\n                cell: ({ row }) => row.original.phone || 'N/A',\r\n                enableSorting: false,\r\n                size: 150,\r\n            },\r\n            {\r\n                id: 'image',\r\n                accessorFn: (row) => row.image,\r\n                header: () => <span className=\"font-bold\">Image</span>,\r\n                cell: ({ row }) =>\r\n                    row.original.image ? (\r\n                        <img\r\n                            src={`${process.env.NEXT_PUBLIC_API_URL}/uploads/${row.original.image}`}\r\n                            alt={`${row.original.firstName} ${row.original.lastName}`}\r\n                            className=\"w-8 h-8 rounded-full object-cover object-center border\"\r\n                        />\r\n                    ) : (\r\n                        <span className=\"text-gray-400 text-sm\">No Image</span>\r\n                    ),\r\n                size: 100,\r\n            },\r\n            {\r\n                id: 'actions',\r\n                header: () => <span className=\"font-bold\">Details</span>,\r\n                cell: ({ row }) => (\r\n                    <button\r\n                        onClick={() => router.push(`/admin/user/${row.original.id}`)}\r\n                        className=\"flex justify-center w-full cursor-pointer text-primary hover:underline\"\r\n                    >\r\n                        <Eye className=\"h-4 w-4\" />\r\n                    </button>\r\n                ),\r\n                size: 80,\r\n            },\r\n        ],\r\n        [router]\r\n    );\r\n\r\n\r\n\r\n    const table = useReactTable({\r\n        columns,\r\n        data: filteredData,\r\n        pageCount: Math.ceil((filteredData?.length || 0) / pagination.pageSize),\r\n        getRowId: (row) => String(row.id),\r\n        state: {\r\n            pagination,\r\n            sorting,\r\n        },\r\n        columnResizeMode: 'onChange',\r\n        onPaginationChange: setPagination,\r\n        onSortingChange: setSorting,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n    });\r\n\r\n    return (\r\n        <DataGrid\r\n            table={table}\r\n            recordCount={filteredData?.length || 0}\r\n            tableLayout={{\r\n                columnsPinnable: true,\r\n                columnsMovable: true,\r\n                columnsVisibility: true,\r\n                rowBorder: true,\r\n            }}\r\n        >\r\n            <Card>\r\n                <CardHeader className=\"py-3.5\">\r\n                    <CardTitle>Users</CardTitle>\r\n                    <CardToolbar className=\"relative\">\r\n                        <Search className=\"size-4 text-muted-foreground absolute start-3 top-1/2 -translate-y-1/2\" />\r\n                        <Input\r\n                            placeholder=\"Search users...\"\r\n                            value={searchQuery}\r\n                            onChange={(e) => setSearchQuery(e.target.value)}\r\n                            className=\"ps-9 max-w-[200px] w-full\"\r\n                        />\r\n                        {searchQuery.length > 0 && (\r\n                            <Button\r\n                                mode=\"icon\"\r\n                                variant=\"ghost\"\r\n                                className=\"absolute end-1.5 top-1/2 -translate-y-1/2 h-6 w-6\"\r\n                                onClick={() => setSearchQuery('')}\r\n                            >\r\n                                <X />\r\n                            </Button>\r\n                        )}\r\n                    </CardToolbar>\r\n                </CardHeader>\r\n                <CardTable>\r\n                    <ScrollArea>\r\n                        <DataGridTable />\r\n                        <ScrollBar orientation=\"horizontal\" />\r\n                    </ScrollArea>\r\n                </CardTable>\r\n                <CardFooter>\r\n                    <DataGridPagination />\r\n                </CardFooter>\r\n            </Card>\r\n        </DataGrid>\r\n    );\r\n};\r\n\r\nexport default GetUserTable;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}