{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/kodu/nextjs/app/api/auth/%5B...nextauth%5D/auth-options.js"],"sourcesContent":["import CredentialsProvider from \"next-auth/providers/credentials\";\n\nconst authOptions = {\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          throw new Error(\"Please provide email and password\");\n        }\n\n        try {\n          const res = await fetch(\"https://wiqiapi.testenvapp.com/api/admin/login\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              email: credentials.email,\n              password: credentials.password,\n            }),\n          });\n\n          const data = await res.json();\n\n          if (!res.ok || !data.success) {\n            throw new Error(data.message || \"Login failed\");\n          }\n\n          // API response format:\n          // { status, success, message, data: { id, email, api_token } }\n\n          return {\n            id: data.data.id,\n            email: data.data.email,\n            token: data.data.api_token, // keep api_token\n          };\n        } catch (err) {\n          console.error(\"Login error:\", err);\n          throw new Error(\"Something went wrong while logging in\");\n        }\n      },\n    }),\n  ],\n\n  session: {\n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60,\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n        token.email = user.email;\n        token.api_token = user.token; // persist API token\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (session.user) {\n        session.user.id = token.id;\n        session.user.email = token.email;\n        session.user.api_token = token.api_token; // expose API token to client\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/signin\",\n  },\n};\n\nexport default authOptions;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBACF,MAAM,MAAM,MAAM,MAAM,kDAAkD;wBACxE,QAAQ;wBACR,SAAS;4BAAE,gBAAgB;wBAAmB;wBAC9C,MAAM,KAAK,SAAS,CAAC;4BACnB,OAAO,YAAY,KAAK;4BACxB,UAAU,YAAY,QAAQ;wBAChC;oBACF;oBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;oBAE3B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,OAAO,EAAE;wBAC5B,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;oBAClC;oBAEA,uBAAuB;oBACvB,+DAA+D;oBAE/D,OAAO;wBACL,IAAI,KAAK,IAAI,CAAC,EAAE;wBAChB,OAAO,KAAK,IAAI,CAAC,KAAK;wBACtB,OAAO,KAAK,IAAI,CAAC,SAAS;oBAC5B;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,gBAAgB;oBAC9B,MAAM,IAAI,MAAM;gBAClB;YACF;QACF;KACD;IAED,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK;IACpB;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,SAAS,GAAG,KAAK,KAAK,EAAE,oBAAoB;YACpD;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAM,SAAS,EAAE,6BAA6B;YACzE;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///D:/kodu/nextjs/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from 'next-auth';\nimport authOptions from './auth-options';\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,6JAAA,CAAA,UAAW","debugId":null}}]
}